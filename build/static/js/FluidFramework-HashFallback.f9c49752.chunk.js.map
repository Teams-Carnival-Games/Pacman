{"version":3,"file":"static/js/FluidFramework-HashFallback.f9c49752.chunk.js","mappings":"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","sources":["../node_modules/@fluidframework/common-utils/src/hashFileNode.ts","../node_modules/@fluidframework/server-services-client/node_modules/@fluidframework/common-utils/src/hashFileNode.ts","../node_modules/@fluidframework/test-runtime-utils/node_modules/@fluidframework/common-utils/src/hashFileNode.ts","../node_modules/buffer/index.js","../node_modules/ieee754/index.js","../node_modules/inherits/inherits_browser.js","../node_modules/safe-buffer/index.js","../node_modules/sha.js/hash.js","../node_modules/sha.js/sha1.js","../node_modules/sha.js/sha256.js"],"sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// eslint-disable-next-line import/no-internal-modules\nimport sha1 from \"sha.js/sha1\";\n// eslint-disable-next-line import/no-internal-modules\nimport sha256 from \"sha.js/sha256\";\nimport { IsoBuffer } from \"./bufferNode\";\n\n/**\n * Hash a file. Consistent within a session, but should not be persisted and\n * is not consistent with git.\n * If called under an insecure context for a browser, this will fallback to\n * using the node implementation.\n *\n * @param file - The contents of the file in a buffer.\n * @param algorithm - The hash algorithm to use, artificially constrained by what is used internally.\n * @param hashEncoding - The encoding of the returned hash, also artificially constrained.\n * @returns The hash of the content of the buffer.\n */\nexport async function hashFile(\n\tfile: IsoBuffer,\n\talgorithm: \"SHA-1\" | \"SHA-256\" = \"SHA-1\",\n\thashEncoding: \"hex\" | \"base64\" = \"hex\",\n): Promise<string> {\n\tlet engine;\n\t// eslint-disable-next-line default-case\n\tswitch (algorithm) {\n\t\tcase \"SHA-1\": {\n\t\t\tengine = new sha1();\n\t\t\tbreak;\n\t\t}\n\t\tcase \"SHA-256\": {\n\t\t\tengine = new sha256();\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn engine.update(file).digest(hashEncoding) as string;\n}\n\n/**\n * Create a github hash (Github hashes the string with blob and size)\n * Must be called under secure context for browsers\n *\n * @param file - The contents of the file in a buffer\n * @returns The sha1 hash of the content of the buffer with the `blob` prefix and size\n */\nexport async function gitHashFile(file: IsoBuffer): Promise<string> {\n\tconst size = file.byteLength;\n\tconst filePrefix = `blob ${size.toString()}${String.fromCharCode(0)}`;\n\tconst engine = new sha1();\n\treturn engine.update(filePrefix).update(file).digest(\"hex\") as string;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// eslint-disable-next-line import/no-internal-modules\nimport sha1 from \"sha.js/sha1\";\n// eslint-disable-next-line import/no-internal-modules\nimport sha256 from \"sha.js/sha256\";\nimport { IsoBuffer } from \"./bufferNode\";\n\n/**\n * Hash a file. Consistent within a session, but should not be persisted and\n * is not consistent with git.\n * If called under an insecure context for a browser, this will fallback to\n * using the node implementation.\n *\n * @param file - The contents of the file in a buffer\n * @param algorithm - The hash algorithm to use, artificially constrained by what is used internally\n * @param hashEncoding - The encoding of the returned hash, also artificially constrained\n * @returns The hash of the content of the buffer\n */\n export async function hashFile(\n    file: IsoBuffer,\n    algorithm: \"SHA-1\" | \"SHA-256\" = \"SHA-1\",\n    hashEncoding: \"hex\" | \"base64\" = \"hex\",\n): Promise<string> {\n    let engine;\n    // eslint-disable-next-line default-case\n    switch (algorithm) {\n        case \"SHA-1\": {\n            engine = new sha1();\n            break;\n        }\n        case \"SHA-256\": {\n            engine = new sha256();\n            break;\n        }\n    }\n    return engine.update(file).digest(hashEncoding) as string;\n}\n\n/**\n * Create a github hash (Github hashes the string with blob and size)\n * Must be called under secure context for browsers\n *\n * @param file - The contents of the file in a buffer\n * @returns The sha1 hash of the content of the buffer with the `blob` prefix and size\n */\nexport async function gitHashFile(file: IsoBuffer): Promise<string> {\n    const size = file.byteLength;\n    const filePrefix = `blob ${size.toString()}${String.fromCharCode(0)}`;\n    const engine = new sha1();\n    return engine.update(filePrefix)\n        .update(file)\n        .digest(\"hex\") as string;\n}\n","/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// eslint-disable-next-line import/no-internal-modules\nimport sha1 from \"sha.js/sha1\";\n// eslint-disable-next-line import/no-internal-modules\nimport sha256 from \"sha.js/sha256\";\nimport { IsoBuffer } from \"./bufferNode\";\n\n/**\n * Hash a file. Consistent within a session, but should not be persisted and\n * is not consistent with git.\n * If called under an insecure context for a browser, this will fallback to\n * using the node implementation.\n *\n * @param file - The contents of the file in a buffer\n * @param algorithm - The hash algorithm to use, artificially constrained by what is used internally\n * @param hashEncoding - The encoding of the returned hash, also artificially constrained\n * @returns The hash of the content of the buffer\n */\n export async function hashFile(\n    file: IsoBuffer,\n    algorithm: \"SHA-1\" | \"SHA-256\" = \"SHA-1\",\n    hashEncoding: \"hex\" | \"base64\" = \"hex\",\n): Promise<string> {\n    let engine;\n    // eslint-disable-next-line default-case\n    switch (algorithm) {\n        case \"SHA-1\": {\n            engine = new sha1();\n            break;\n        }\n        case \"SHA-256\": {\n            engine = new sha256();\n            break;\n        }\n    }\n    return engine.update(file).digest(hashEncoding) as string;\n}\n\n/**\n * Create a github hash (Github hashes the string with blob and size)\n * Must be called under secure context for browsers\n *\n * @param file - The contents of the file in a buffer\n * @returns The sha1 hash of the content of the buffer with the `blob` prefix and size\n */\nexport async function gitHashFile(file: IsoBuffer): Promise<string> {\n    const size = file.byteLength;\n    const filePrefix = `blob ${size.toString()}${String.fromCharCode(0)}`;\n    const engine = new sha1();\n    return engine.update(filePrefix)\n        .update(file)\n        .digest(\"hex\") as string;\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n"],"names":["hashFile","_x","_hashFile","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","algorithm","hashEncoding","engine","_args","wrap","_context","prev","next","length","undefined","t0","sha1","abrupt","sha256","update","digest","stop","gitHashFile","_x2","_gitHashFile","_callee2","size","filePrefix","_context2","byteLength","concat","toString","String","fromCharCode","_classCallCheck","require","_createClass","_assertThisInitialized","_inherits","_createSuper","base64","ieee754","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Uint8Array","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","len","checked","numberIsNaN","type","Array","isArray","data","fromObject","toPrimitive","assertSize","array","i","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","Error","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","pow","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","_Base","NodeError","_super","_this","writable","configurable","name","stack","key","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","split","base64clean","src","dst","constructor","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","create","module","ctor","superCtor","super_","TempCtor","copyProps","SafeBuffer","Hash","blockSize","finalSize","_block","_finalSize","_blockSize","_len","enc","block","accum","assigned","remainder","_update","rem","bits","lowBits","highBits","hash","_hash","inherits","K","W","Sha1","init","_w","rotl5","num","rotl30","ft","_a","_b","_c","_d","_e","M","t","H","Sha256","ch","z","maj","sigma0","sigma1","gamma0","_f","_g","_h","f","g","h","T1","T2"],"sourceRoot":""}